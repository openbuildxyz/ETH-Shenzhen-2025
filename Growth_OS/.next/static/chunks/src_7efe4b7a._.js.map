{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/liyao/Code/workwork/frontend/Growth_OS/src/lib/settings.ts"],"sourcesContent":["import { supabase } from './supabase'\n\n// 类型定义\nexport interface UserSettings {\n  id: string\n  user_id: string\n  // 通知设置\n  email_notifications: boolean\n  push_notifications: boolean\n  order_notifications: boolean\n  marketing_notifications: boolean\n  security_notifications: boolean\n  // 隐私设置\n  profile_visibility: 'public' | 'private' | 'contacts_only'\n  show_online_status: boolean\n  allow_contact_from_strangers: boolean\n  show_purchase_history: boolean\n  // 界面设置\n  language: 'en' | 'zh' | 'es' | 'fr' | 'de' | 'ja' | 'ko'\n  theme: 'light' | 'dark' | 'auto'\n  currency_preference: 'USD' | 'EUR' | 'GBP' | 'JPY' | 'CNY' | 'KRW' | 'SOL'\n  timezone: string\n  // 安全设置\n  two_factor_enabled: boolean\n  session_timeout: number\n  require_password_change: boolean\n  // API设置\n  api_access_enabled: boolean\n  webhooks_enabled: boolean\n  // 时间戳\n  created_at: string\n  updated_at: string\n}\n\nexport interface UserNotification {\n  id: string\n  user_id: string\n  title: string\n  message: string\n  type: 'info' | 'success' | 'warning' | 'error' | 'order' | 'security' | 'marketing'\n  is_read: boolean\n  is_archived: boolean\n  related_id?: string\n  related_type?: string\n  sent_via_email: boolean\n  sent_via_push: boolean\n  created_at: string\n  read_at?: string\n  archived_at?: string\n}\n\nexport interface UserApiKey {\n  id: string\n  user_id: string\n  key_name: string\n  api_key: string\n  api_secret: string\n  permissions: string[]\n  last_used_at?: string\n  expires_at?: string\n  is_active: boolean\n  created_at: string\n}\n\nexport class SettingsService {\n  // 获取用户设置\n  static async getUserSettings(userId: string): Promise<UserSettings | null> {\n    if (!supabase) {\n      throw new Error('Supabase not available')\n    }\n\n    try {\n      const { data, error } = await supabase\n        .from('user_settings')\n        .select('*')\n        .eq('user_id', userId)\n        .single()\n\n      if (error) {\n        console.error('Error fetching user settings:', error)\n        return null\n      }\n\n      return data\n    } catch (error) {\n      console.error('Error in getUserSettings:', error)\n      throw error\n    }\n  }\n\n  // 更新用户设置\n  static async updateUserSettings(\n    userId: string, \n    settings: Partial<Omit<UserSettings, 'id' | 'user_id' | 'created_at' | 'updated_at'>>\n  ): Promise<UserSettings> {\n    if (!supabase) {\n      throw new Error('Supabase not available')\n    }\n\n    try {\n      const { data, error } = await supabase\n        .from('user_settings')\n        .update(settings)\n        .eq('user_id', userId)\n        .select()\n        .single()\n\n      if (error) {\n        throw new Error(`Failed to update settings: ${error.message}`)\n      }\n\n      return data\n    } catch (error) {\n      console.error('Error in updateUserSettings:', error)\n      throw error\n    }\n  }\n\n  // 获取用户通知\n  static async getUserNotifications(\n    userId: string,\n    limit: number = 20,\n    offset: number = 0,\n    unreadOnly: boolean = false\n  ): Promise<UserNotification[]> {\n    if (!supabase) {\n      throw new Error('Supabase not available')\n    }\n\n    try {\n      let query = supabase\n        .from('user_notifications')\n        .select('*')\n        .eq('user_id', userId)\n        .eq('is_archived', false)\n        .order('created_at', { ascending: false })\n        .range(offset, offset + limit - 1)\n\n      if (unreadOnly) {\n        query = query.eq('is_read', false)\n      }\n\n      const { data, error } = await query\n\n      if (error) {\n        throw new Error(`Failed to fetch notifications: ${error.message}`)\n      }\n\n      return data || []\n    } catch (error) {\n      console.error('Error in getUserNotifications:', error)\n      throw error\n    }\n  }\n\n  // 标记通知为已读\n  static async markNotificationAsRead(notificationId: string): Promise<void> {\n    if (!supabase) {\n      throw new Error('Supabase not available')\n    }\n\n    try {\n      const { error } = await supabase\n        .from('user_notifications')\n        .update({ \n          is_read: true, \n          read_at: new Date().toISOString() \n        })\n        .eq('id', notificationId)\n\n      if (error) {\n        throw new Error(`Failed to mark notification as read: ${error.message}`)\n      }\n    } catch (error) {\n      console.error('Error in markNotificationAsRead:', error)\n      throw error\n    }\n  }\n\n  // 批量标记通知为已读\n  static async markAllNotificationsAsRead(userId: string): Promise<void> {\n    if (!supabase) {\n      throw new Error('Supabase not available')\n    }\n\n    try {\n      const { error } = await supabase\n        .from('user_notifications')\n        .update({ \n          is_read: true, \n          read_at: new Date().toISOString() \n        })\n        .eq('user_id', userId)\n        .eq('is_read', false)\n\n      if (error) {\n        throw new Error(`Failed to mark notifications as read: ${error.message}`)\n      }\n    } catch (error) {\n      console.error('Error in markAllNotificationsAsRead:', error)\n      throw error\n    }\n  }\n\n  // 创建通知\n  static async createNotification(\n    userId: string,\n    title: string,\n    message: string,\n    type: UserNotification['type'],\n    relatedId?: string,\n    relatedType?: string\n  ): Promise<UserNotification> {\n    if (!supabase) {\n      throw new Error('Supabase not available')\n    }\n\n    try {\n      const { data, error } = await supabase\n        .from('user_notifications')\n        .insert({\n          user_id: userId,\n          title,\n          message,\n          type,\n          related_id: relatedId,\n          related_type: relatedType\n        })\n        .select()\n        .single()\n\n      if (error) {\n        throw new Error(`Failed to create notification: ${error.message}`)\n      }\n\n      return data\n    } catch (error) {\n      console.error('Error in createNotification:', error)\n      throw error\n    }\n  }\n\n  // 获取用户API密钥\n  static async getUserApiKeys(userId: string): Promise<UserApiKey[]> {\n    if (!supabase) {\n      throw new Error('Supabase not available')\n    }\n\n    try {\n      const { data, error } = await supabase\n        .from('user_api_keys')\n        .select('*')\n        .eq('user_id', userId)\n        .eq('is_active', true)\n        .order('created_at', { ascending: false })\n\n      if (error) {\n        throw new Error(`Failed to fetch API keys: ${error.message}`)\n      }\n\n      return data || []\n    } catch (error) {\n      console.error('Error in getUserApiKeys:', error)\n      throw error\n    }\n  }\n\n  // 创建API密钥\n  static async createApiKey(\n    userId: string,\n    keyName: string,\n    permissions: string[] = [],\n    expiresAt?: string\n  ): Promise<UserApiKey> {\n    if (!supabase) {\n      throw new Error('Supabase not available')\n    }\n\n    try {\n      // 生成API密钥和密钥\n      const apiKey = this.generateApiKey()\n      const apiSecret = this.generateApiSecret()\n\n      const { data, error } = await supabase\n        .from('user_api_keys')\n        .insert({\n          user_id: userId,\n          key_name: keyName,\n          api_key: apiKey,\n          api_secret: apiSecret,\n          permissions,\n          expires_at: expiresAt\n        })\n        .select()\n        .single()\n\n      if (error) {\n        throw new Error(`Failed to create API key: ${error.message}`)\n      }\n\n      return data\n    } catch (error) {\n      console.error('Error in createApiKey:', error)\n      throw error\n    }\n  }\n\n  // 删除API密钥\n  static async deleteApiKey(keyId: string, userId: string): Promise<void> {\n    if (!supabase) {\n      throw new Error('Supabase not available')\n    }\n\n    try {\n      const { error } = await supabase\n        .from('user_api_keys')\n        .update({ is_active: false })\n        .eq('id', keyId)\n        .eq('user_id', userId)\n\n      if (error) {\n        throw new Error(`Failed to delete API key: ${error.message}`)\n      }\n    } catch (error) {\n      console.error('Error in deleteApiKey:', error)\n      throw error\n    }\n  }\n\n  // 生成API密钥\n  private static generateApiKey(): string {\n    return 'ww_' + this.generateRandomString(32)\n  }\n\n  // 生成API密钥\n  private static generateApiSecret(): string {\n    return 'wws_' + this.generateRandomString(48)\n  }\n\n  // 生成随机字符串\n  private static generateRandomString(length: number): string {\n    const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\n    let result = ''\n    for (let i = 0; i < length; i++) {\n      result += chars.charAt(Math.floor(Math.random() * chars.length))\n    }\n    return result\n  }\n\n  // 获取通知统计\n  static async getNotificationStats(userId: string): Promise<{\n    total: number\n    unread: number\n    byType: Record<string, number>\n  }> {\n    if (!supabase) {\n      throw new Error('Supabase not available')\n    }\n\n    try {\n      const { data, error } = await supabase\n        .from('user_notifications')\n        .select('type, is_read')\n        .eq('user_id', userId)\n        .eq('is_archived', false)\n\n      if (error) {\n        throw new Error(`Failed to fetch notification stats: ${error.message}`)\n      }\n\n      const stats = {\n        total: data?.length || 0,\n        unread: data?.filter(n => !n.is_read).length || 0,\n        byType: {} as Record<string, number>\n      }\n\n      data?.forEach(notification => {\n        stats.byType[notification.type] = (stats.byType[notification.type] || 0) + 1\n      })\n\n      return stats\n    } catch (error) {\n      console.error('Error in getNotificationStats:', error)\n      throw error\n    }\n  }\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 241, "column": 0}, "map": {"version":3,"sources":["file:///Users/liyao/Code/workwork/frontend/Growth_OS/src/lib/constants.ts"],"sourcesContent":["import { TagType } from '@/types'\n\nexport const TAG_COLORS: Record<TagType, string> = {\n  ai: 'bg-[#FFDCF9] text-tag-ai',\n  crypto: 'bg-[#C7FFCC] text-tag-crypto', \n  education: 'bg-[#ABD5FF] text-tag-education',\n}\n\nexport const FILTER_OPTIONS = [\n  { key: 'time' as const, label: 'Time' },\n  { key: 'price' as const, label: 'Price' },\n  { key: 'likes' as const, label: 'Likes' },\n  { key: 'views' as const, label: 'Views' },\n]\n\nexport const DEFAULT_PROJECT_IMAGE = '/project-image.png'\n\nexport const BRAND_LOGO_URL = '/growthos-logo-new.png'\n\nexport const DEFAULT_USER = {\n  username: 'Username',\n  walletAddress: 'Wallet Address',\n  avatar: 'https://pbs.twimg.com/profile_images/1912362795879809025/HbzzOBdl_400x400.jpg'\n}"],"names":[],"mappings":";;;;;;;AAEO,MAAM,aAAsC;IACjD,IAAI;IACJ,QAAQ;IACR,WAAW;AACb;AAEO,MAAM,iBAAiB;IAC5B;QAAE,KAAK;QAAiB,OAAO;IAAO;IACtC;QAAE,KAAK;QAAkB,OAAO;IAAQ;IACxC;QAAE,KAAK;QAAkB,OAAO;IAAQ;IACxC;QAAE,KAAK;QAAkB,OAAO;IAAQ;CACzC;AAEM,MAAM,wBAAwB;AAE9B,MAAM,iBAAiB;AAEvB,MAAM,eAAe;IAC1B,UAAU;IACV,eAAe;IACf,QAAQ;AACV","debugId":null}},
    {"offset": {"line": 287, "column": 0}, "map": {"version":3,"sources":["file:///Users/liyao/Code/workwork/frontend/Growth_OS/src/components/header/BrandLogo.tsx"],"sourcesContent":["import Image from 'next/image'\nimport { BRAND_LOGO_URL } from '@/lib/constants'\n\nexport function BrandLogo() {\n  return (\n    <button \n      onClick={() => window.location.href = '/'}\n      className=\"rounded-full px-2 py-1 h-10 flex items-center hover:opacity-80 transition-opacity cursor-pointer\" \n      style={{backgroundColor: '#16b4f2'}}\n    >\n      <Image \n        src={BRAND_LOGO_URL}\n        alt=\"GrowthOS Logo\" \n        width={160}\n        height={40}\n        className=\"h-10 w-auto object-contain rounded-lg\"\n        quality={100}\n        priority\n        unoptimized\n      />\n    </button>\n  )\n}"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAEO,SAAS;IACd,qBACE,6LAAC;QACC,SAAS,IAAM,OAAO,QAAQ,CAAC,IAAI,GAAG;QACtC,WAAU;QACV,OAAO;YAAC,iBAAiB;QAAS;kBAElC,cAAA,6LAAC,gIAAA,CAAA,UAAK;YACJ,KAAK,0HAAA,CAAA,iBAAc;YACnB,KAAI;YACJ,OAAO;YACP,QAAQ;YACR,WAAU;YACV,SAAS;YACT,QAAQ;YACR,WAAW;;;;;;;;;;;AAInB;KAnBgB","debugId":null}},
    {"offset": {"line": 335, "column": 0}, "map": {"version":3,"sources":["file:///Users/liyao/Code/workwork/frontend/Growth_OS/src/components/auth/AuthModal.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from 'react'\nimport { X, Mail, Lock, User, Eye, EyeOff } from 'lucide-react'\nimport { useAuth } from '@/providers/AuthProvider'\n\ninterface AuthModalProps {\n  isOpen: boolean\n  onClose: () => void\n  defaultMode?: 'signin' | 'signup'\n}\n\nexport function AuthModal({ isOpen, onClose, defaultMode = 'signin' }: AuthModalProps) {\n  const [mode, setMode] = useState(defaultMode)\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [username, setUsername] = useState('')\n  const [showPassword, setShowPassword] = useState(false)\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState('')\n\n  const { signIn, signUp } = useAuth()\n\n  if (!isOpen) return null\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault()\n    setLoading(true)\n    setError('')\n\n    try {\n      if (mode === 'signup') {\n        await signUp(email, password, username)\n      } else {\n        await signIn(email, password)\n      }\n      onClose()\n    } catch (err: unknown) {\n      setError(err instanceof Error ? err.message : 'An error occurred')\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const switchMode = () => {\n    setMode(mode === 'signin' ? 'signup' : 'signin')\n    setError('')\n  }\n\n  return (\n    <div className=\"fixed inset-0 bg-black/50 flex items-center justify-center z-50 p-4\">\n      <div className=\"bg-white rounded-xl max-w-md w-full p-6 relative\">\n        <button\n          onClick={onClose}\n          className=\"absolute top-4 right-4 text-gray-400 hover:text-gray-600\"\n        >\n          <X className=\"w-5 h-5\" />\n        </button>\n\n        <div className=\"text-center mb-6\">\n          <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">\n            {mode === 'signin' ? 'Welcome Back!' : 'Join WorkWork'}\n          </h2>\n          <p className=\"text-gray-600\">\n            {mode === 'signin' \n              ? 'Sign in to access your dashboard' \n              : 'Create your account to get started'\n            }\n          </p>\n        </div>\n\n        {error && (\n          <div className=\"bg-red-50 border border-red-200 text-red-600 px-4 py-3 rounded-lg mb-4 text-sm\">\n            {error}\n          </div>\n        )}\n\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\n          {mode === 'signup' && (\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Username\n              </label>\n              <div className=\"relative\">\n                <User className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-5 h-5\" />\n                <input\n                  type=\"text\"\n                  required\n                  value={username}\n                  onChange={(e) => setUsername(e.target.value)}\n                  className=\"w-full pl-10 pr-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-transparent\"\n                  placeholder=\"Your username\"\n                />\n              </div>\n            </div>\n          )}\n\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Email\n            </label>\n            <div className=\"relative\">\n              <Mail className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-5 h-5\" />\n              <input\n                type=\"email\"\n                required\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                className=\"w-full pl-10 pr-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-transparent\"\n                placeholder=\"your@email.com\"\n              />\n            </div>\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Password\n            </label>\n            <div className=\"relative\">\n              <Lock className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-5 h-5\" />\n              <input\n                type={showPassword ? 'text' : 'password'}\n                required\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                className=\"w-full pl-10 pr-12 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-transparent\"\n                placeholder=\"Enter your password\"\n              />\n              <button\n                type=\"button\"\n                onClick={() => setShowPassword(!showPassword)}\n                className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600\"\n              >\n                {showPassword ? <EyeOff className=\"w-5 h-5\" /> : <Eye className=\"w-5 h-5\" />}\n              </button>\n            </div>\n          </div>\n\n          <button\n            type=\"submit\"\n            disabled={loading}\n            className=\"w-full bg-primary text-white py-3 rounded-lg font-medium hover:bg-blue-600 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n          >\n            {loading ? 'Processing...' : (mode === 'signin' ? 'Sign In' : 'Create Account')}\n          </button>\n        </form>\n\n        <div className=\"mt-6 text-center\">\n          <p className=\"text-gray-600\">\n            {mode === 'signin' ? \"Don't have an account? \" : \"Already have an account? \"}\n            <button\n              onClick={switchMode}\n              className=\"text-primary hover:text-blue-600 font-medium\"\n            >\n              {mode === 'signin' ? 'Sign up' : 'Sign in'}\n            </button>\n          </p>\n        </div>\n\n        {mode === 'signin' && (\n          <div className=\"mt-4 text-center\">\n            <button className=\"text-sm text-gray-500 hover:text-gray-700\">\n              Forgot your password?\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 683, "column": 0}, "map": {"version":3,"sources":["file:///Users/liyao/Code/workwork/frontend/Growth_OS/src/components/Header.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from 'react'\nimport Image from 'next/image'\nimport { useRouter } from 'next/navigation'\nimport { User, LogOut, Settings, Package, ShoppingBag } from 'lucide-react'\nimport { BrandLogo } from './header/BrandLogo'\nimport { AuthModal } from './auth/AuthModal'\nimport { useAuth } from '@/providers/AuthProvider'\n\nexport function Header() {\n  const [showDropdown, setShowDropdown] = useState(false)\n  const [showAuthModal, setShowAuthModal] = useState(false)\n  const [authMode, setAuthMode] = useState<'signin' | 'signup'>('signin')\n  const router = useRouter()\n  \n  const { user, profile, signOut } = useAuth()\n\n  const handleAuthClick = (mode: 'signin' | 'signup') => {\n    setAuthMode(mode)\n    setShowAuthModal(true)\n  }\n\n  const handleSignOut = async () => {\n    await signOut()\n    setShowDropdown(false)\n  }\n\n  return (\n    <>\n      <div className=\"mx-6 mt-4 h-14 bg-primary flex items-center justify-between px-2 shadow-button rounded-full\">\n        <BrandLogo />\n        \n        <div className=\"flex items-center space-x-4\">\n          {user && profile ? (\n            // Authenticated user\n            <div className=\"relative\">\n              <button\n                onClick={() => setShowDropdown(!showDropdown)}\n                className=\"flex items-center space-x-2 bg-white hover:bg-gray-50 rounded-full px-3 py-2 transition-colors shadow-sm\"\n              >\n                <Image\n                  src={profile.avatar}\n                  alt={profile.username}\n                  width={32}\n                  height={32}\n                  className=\"w-8 h-8 rounded-full\"\n                />\n                <span className=\"text-gray-900 font-medium hidden sm:block\">\n                  {profile.username}\n                </span>\n              </button>\n\n              {showDropdown && (\n                <div className=\"absolute right-0 mt-2 w-72 bg-white rounded-lg shadow-lg py-2 z-50\">\n                  <div className=\"px-4 py-3 border-b border-gray-100 bg-white\">\n                    <p className=\"text-sm font-medium text-gray-900 truncate\">{profile.username}</p>\n                    <p className=\"text-xs text-gray-500 truncate\">\n                      {profile.walletAddress \n                        ? `${profile.walletAddress.slice(0, 6)}...${profile.walletAddress.slice(-4)}`\n                        : profile.email\n                      }\n                    </p>\n                  </div>\n                  \n                  <button\n                    onClick={() => {\n                      router.push('/profile')\n                      setShowDropdown(false)\n                    }}\n                    className=\"w-full flex items-center space-x-2 px-4 py-2 text-sm text-gray-700 hover:bg-gray-50\"\n                  >\n                    <User className=\"w-4 h-4\" />\n                    <span>Profile</span>\n                  </button>\n                  \n                  <button\n                    onClick={() => {\n                      router.push('/projects')\n                      setShowDropdown(false)\n                    }}\n                    className=\"w-full flex items-center space-x-2 px-4 py-2 text-sm text-gray-700 hover:bg-gray-50\"\n                  >\n                    <Package className=\"w-4 h-4\" />\n                    <span>My Projects</span>\n                  </button>\n                  \n                  <button\n                    onClick={() => {\n                      router.push('/orders')\n                      setShowDropdown(false)\n                    }}\n                    className=\"w-full flex items-center space-x-2 px-4 py-2 text-sm text-gray-700 hover:bg-gray-50\"\n                  >\n                    <ShoppingBag className=\"w-4 h-4\" />\n                    <span>My Orders</span>\n                  </button>\n                  \n                  <button\n                    onClick={() => {\n                      router.push('/settings')\n                      setShowDropdown(false)\n                    }}\n                    className=\"w-full flex items-center space-x-2 px-4 py-2 text-sm text-gray-700 hover:bg-gray-50\"\n                  >\n                    <Settings className=\"w-4 h-4\" />\n                    <span>Settings</span>\n                  </button>\n                  \n                  <div className=\"border-t border-gray-100 mt-2 pt-2\">\n                    <button\n                      onClick={handleSignOut}\n                      className=\"w-full flex items-center space-x-2 px-4 py-2 text-sm text-red-600 hover:bg-red-50\"\n                    >\n                      <LogOut className=\"w-4 h-4\" />\n                      <span>Sign Out</span>\n                    </button>\n                  </div>\n                </div>\n              )}\n            </div>\n          ) : (\n            // Unauthenticated user\n            <div className=\"flex items-center space-x-2\">\n              <button\n                onClick={() => handleAuthClick('signin')}\n                className=\"text-white hover:text-white/80 font-medium px-4 py-2 rounded-full hover:bg-white/10 transition-colors\"\n              >\n                Sign In\n              </button>\n              <button\n                onClick={() => handleAuthClick('signup')}\n                className=\"bg-white text-primary hover:bg-white/90 font-medium px-4 py-2 rounded-full transition-colors\"\n              >\n                Sign Up\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n\n      <AuthModal\n        isOpen={showAuthModal}\n        onClose={() => setShowAuthModal(false)}\n        defaultMode={authMode}\n      />\n    </>\n  )\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1015, "column": 0}, "map": {"version":3,"sources":["file:///Users/liyao/Code/workwork/frontend/Growth_OS/src/app/settings/page.tsx"],"sourcesContent":["'use client'\n\nimport { useEffect, useState, useCallback } from 'react'\nimport { useAuth } from '@/providers/AuthProvider'\nimport { SettingsService, UserSettings, UserApiKey, UserNotification } from '@/lib/settings'\nimport { Header } from '@/components/Header'\nimport { \n  Settings,\n  Bell,\n  Shield,\n  Globe,\n  Key,\n  Moon,\n  Sun,\n  Monitor,\n  Eye,\n  Clock,\n  DollarSign,\n  Trash2,\n  Plus,\n  AlertCircle,\n  CheckCircle,\n  X\n} from 'lucide-react'\n\n// Force dynamic rendering due to auth usage\nexport const dynamic = 'force-dynamic'\n\nexport default function SettingsPage() {\n  const { user, loading: authLoading } = useAuth()\n  const [settings, setSettings] = useState<UserSettings | null>(null)\n  const [apiKeys, setApiKeys] = useState<UserApiKey[]>([])\n  const [notifications, setNotifications] = useState<UserNotification[]>([])\n  const [loading, setLoading] = useState(true)\n  const [saving, setSaving] = useState(false)\n  const [activeTab, setActiveTab] = useState<'general' | 'notifications' | 'privacy' | 'security' | 'api'>('general')\n  const [showCreateApiKey, setShowCreateApiKey] = useState(false)\n  const [newApiKeyName, setNewApiKeyName] = useState('')\n  const [message, setMessage] = useState<{ type: 'success' | 'error', text: string } | null>(null)\n  const [mounted, setMounted] = useState(false)\n\n  const loadSettings = useCallback(async () => {\n    if (!user) return\n\n    setLoading(true)\n    try {\n      const [userSettings, userApiKeys, userNotifications] = await Promise.all([\n        SettingsService.getUserSettings(user.id),\n        SettingsService.getUserApiKeys(user.id),\n        SettingsService.getUserNotifications(user.id, 10, 0)\n      ])\n\n      setSettings(userSettings)\n      setApiKeys(userApiKeys)\n      setNotifications(userNotifications)\n    } catch (err) {\n      console.error('Failed to load settings:', err)\n      showMessage('error', 'Failed to load settings')\n    } finally {\n      setLoading(false)\n    }\n  }, [user])\n\n  useEffect(() => {\n    setMounted(true)\n  }, [])\n\n  useEffect(() => {\n    if (user) {\n      loadSettings()\n    }\n  }, [user, loadSettings])\n\n  const showMessage = (type: 'success' | 'error', text: string) => {\n    setMessage({ type, text })\n    setTimeout(() => setMessage(null), 3000)\n  }\n\n  const handleSaveSettings = async (updatedSettings: Partial<UserSettings>) => {\n    if (!user || !settings) return\n\n    setSaving(true)\n    try {\n      const newSettings = await SettingsService.updateUserSettings(user.id, updatedSettings)\n      setSettings(newSettings)\n      showMessage('success', 'Settings saved successfully')\n    } catch (err) {\n      console.error('Failed to save settings:', err)\n      showMessage('error', 'Failed to save settings')\n    } finally {\n      setSaving(false)\n    }\n  }\n\n  const handleCreateApiKey = async () => {\n    if (!user || !newApiKeyName.trim()) return\n\n    try {\n      const newKey = await SettingsService.createApiKey(user.id, newApiKeyName.trim())\n      setApiKeys(prev => [newKey, ...prev])\n      setNewApiKeyName('')\n      setShowCreateApiKey(false)\n      showMessage('success', 'API key created successfully')\n    } catch (err) {\n      console.error('Failed to create API key:', err)\n      showMessage('error', 'Failed to create API key')\n    }\n  }\n\n  const handleDeleteApiKey = async (keyId: string) => {\n    if (!user || !confirm('Are you sure you want to delete this API key?')) return\n\n    try {\n      await SettingsService.deleteApiKey(keyId, user.id)\n      setApiKeys(prev => prev.filter(key => key.id !== keyId))\n      showMessage('success', 'API key deleted successfully')\n    } catch (err) {\n      console.error('Failed to delete API key:', err)\n      showMessage('error', 'Failed to delete API key')\n    }\n  }\n\n  const markAllNotificationsAsRead = async () => {\n    if (!user) return\n\n    try {\n      await SettingsService.markAllNotificationsAsRead(user.id)\n      setNotifications(prev => prev.map(n => ({ ...n, is_read: true })))\n      showMessage('success', 'All notifications marked as read')\n    } catch (err) {\n      console.error('Failed to mark notifications as read:', err)\n      showMessage('error', 'Failed to mark notifications as read')\n    }\n  }\n\n  if (authLoading || !mounted) {\n    return (\n      <div className=\"min-h-screen bg-bg-blue flex items-center justify-center\">\n        <div className=\"text-white text-xl\">Loading...</div>\n      </div>\n    )\n  }\n\n  if (!user) {\n    return (\n      <div className=\"min-h-screen bg-bg-blue flex items-center justify-center\">\n        <div className=\"text-center text-white\">\n          <h2 className=\"text-2xl font-bold mb-4\">Access Denied</h2>\n          <p>Please log in to access settings.</p>\n        </div>\n      </div>\n    )\n  }\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-bg-blue flex items-center justify-center\">\n        <div className=\"text-white text-xl\">Loading settings...</div>\n      </div>\n    )\n  }\n\n  const tabs = [\n    { id: 'general', label: 'General', icon: Settings },\n    { id: 'notifications', label: 'Notifications', icon: Bell },\n    { id: 'privacy', label: 'Privacy', icon: Eye },\n    { id: 'security', label: 'Security', icon: Shield },\n    { id: 'api', label: 'API Access', icon: Key }\n  ] as const\n\n  return (\n    <div className=\"min-h-screen bg-bg-blue\">\n      <Header />\n      <div className=\"container mx-auto px-4 py-8\">\n        {/* Header */}\n        <div className=\"mb-8\">\n          <h1 className=\"text-3xl font-bold mb-2\" style={{ color: '#38B6FF' }}>Settings</h1>\n          <p style={{ color: '#38B6FF', opacity: 0.8 }}>Manage your account preferences and configurations</p>\n        </div>\n\n        {/* Message */}\n        {message && (\n          <div className={`fixed top-4 right-4 z-50 p-4 rounded-lg shadow-lg flex items-center gap-2 ${\n            message.type === 'success' ? 'bg-green-500 text-white' : 'bg-red-500 text-white'\n          }`}>\n            {message.type === 'success' ? (\n              <CheckCircle className=\"w-5 h-5\" />\n            ) : (\n              <AlertCircle className=\"w-5 h-5\" />\n            )}\n            <span>{message.text}</span>\n            <button onClick={() => setMessage(null)}>\n              <X className=\"w-4 h-4\" />\n            </button>\n          </div>\n        )}\n\n        <div className=\"flex flex-col lg:flex-row gap-8\">\n          {/* Sidebar */}\n          <div className=\"lg:w-64 flex-shrink-0\">\n            <nav className=\"bg-white rounded-lg p-1\">\n              {tabs.map((tab) => {\n                const Icon = tab.icon\n                return (\n                  <button\n                    key={tab.id}\n                    onClick={() => setActiveTab(tab.id)}\n                    className={`w-full flex items-center gap-3 px-4 py-3 text-left rounded-lg transition-colors ${\n                      activeTab === tab.id\n                        ? 'bg-primary text-white'\n                        : 'text-gray-600 hover:bg-gray-50'\n                    }`}\n                  >\n                    <Icon className=\"w-5 h-5\" />\n                    <span className=\"font-medium\">{tab.label}</span>\n                  </button>\n                )\n              })}\n            </nav>\n          </div>\n\n          {/* Content */}\n          <div className=\"flex-1\">\n            <div className=\"bg-white rounded-lg p-6\">\n              {activeTab === 'general' && (\n                <GeneralSettings \n                  settings={settings} \n                  onSave={handleSaveSettings} \n                  saving={saving} \n                />\n              )}\n              \n              {activeTab === 'notifications' && (\n                <NotificationSettings \n                  settings={settings} \n                  notifications={notifications}\n                  onSave={handleSaveSettings} \n                  onMarkAllRead={markAllNotificationsAsRead}\n                  saving={saving} \n                />\n              )}\n              \n              {activeTab === 'privacy' && (\n                <PrivacySettings \n                  settings={settings} \n                  onSave={handleSaveSettings} \n                  saving={saving} \n                />\n              )}\n              \n              {activeTab === 'security' && (\n                <SecuritySettings \n                  settings={settings} \n                  onSave={handleSaveSettings} \n                  saving={saving} \n                />\n              )}\n              \n              {activeTab === 'api' && (\n                <ApiSettings \n                  apiKeys={apiKeys}\n                  showCreateForm={showCreateApiKey}\n                  newKeyName={newApiKeyName}\n                  onToggleCreateForm={() => setShowCreateApiKey(!showCreateApiKey)}\n                  onKeyNameChange={setNewApiKeyName}\n                  onCreateKey={handleCreateApiKey}\n                  onDeleteKey={handleDeleteApiKey}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\n// General Settings Component\nfunction GeneralSettings({ \n  settings, \n  onSave, \n  saving \n}: { \n  settings: UserSettings | null, \n  onSave: (settings: Partial<UserSettings>) => void,\n  saving: boolean \n}) {\n  if (!settings) return <div>Loading...</div>\n\n  return (\n    <div className=\"space-y-6\">\n      <div>\n        <h2 className=\"text-2xl font-bold text-gray-800 mb-4\">General Settings</h2>\n        <p className=\"text-gray-600\">Configure your basic preferences</p>\n      </div>\n\n      {/* Language */}\n      <div className=\"space-y-2\">\n        <label className=\"flex items-center gap-2 text-sm font-medium text-gray-700\">\n          <Globe className=\"w-4 h-4\" />\n          Language\n        </label>\n        <select\n          value={settings.language}\n          onChange={(e) => onSave({ language: e.target.value as UserSettings['language'] })}\n          disabled={saving}\n          className=\"w-full border border-gray-300 rounded-lg px-3 py-2 focus:ring-2 focus:ring-primary focus:border-transparent\"\n        >\n          <option value=\"en\">English</option>\n          <option value=\"zh\">中文</option>\n          <option value=\"es\">Español</option>\n          <option value=\"fr\">Français</option>\n          <option value=\"de\">Deutsch</option>\n          <option value=\"ja\">日本語</option>\n          <option value=\"ko\">한국어</option>\n        </select>\n      </div>\n\n      {/* Theme */}\n      <div className=\"space-y-2\">\n        <label className=\"flex items-center gap-2 text-sm font-medium text-gray-700\">\n          <Monitor className=\"w-4 h-4\" />\n          Theme\n        </label>\n        <div className=\"flex gap-2\">\n          {[\n            { value: 'light', label: 'Light', icon: Sun },\n            { value: 'dark', label: 'Dark', icon: Moon },\n            { value: 'auto', label: 'Auto', icon: Monitor }\n          ].map(({ value, label, icon: Icon }) => (\n            <button\n              key={value}\n              onClick={() => onSave({ theme: value as UserSettings['theme'] })}\n              disabled={saving}\n              className={`flex items-center gap-2 px-4 py-2 rounded-lg border transition-colors ${\n                settings.theme === value\n                  ? 'border-primary bg-primary text-white'\n                  : 'border-gray-300 text-gray-700 hover:bg-gray-50'\n              }`}\n            >\n              <Icon className=\"w-4 h-4\" />\n              {label}\n            </button>\n          ))}\n        </div>\n      </div>\n\n      {/* Currency */}\n      <div className=\"space-y-2\">\n        <label className=\"flex items-center gap-2 text-sm font-medium text-gray-700\">\n          <DollarSign className=\"w-4 h-4\" />\n          Currency Preference\n        </label>\n        <select\n          value={settings.currency_preference}\n          onChange={(e) => onSave({ currency_preference: e.target.value as UserSettings['currency_preference'] })}\n          disabled={saving}\n          className=\"w-full border border-gray-300 rounded-lg px-3 py-2 focus:ring-2 focus:ring-primary focus:border-transparent\"\n        >\n          <option value=\"USD\">USD ($)</option>\n          <option value=\"EUR\">EUR (€)</option>\n          <option value=\"GBP\">GBP (£)</option>\n          <option value=\"JPY\">JPY (¥)</option>\n          <option value=\"CNY\">CNY (¥)</option>\n          <option value=\"KRW\">KRW (₩)</option>\n          <option value=\"SOL\">SOL</option>\n        </select>\n      </div>\n\n      {/* Timezone */}\n      <div className=\"space-y-2\">\n        <label className=\"flex items-center gap-2 text-sm font-medium text-gray-700\">\n          <Clock className=\"w-4 h-4\" />\n          Timezone\n        </label>\n        <select\n          value={settings.timezone}\n          onChange={(e) => onSave({ timezone: e.target.value })}\n          disabled={saving}\n          className=\"w-full border border-gray-300 rounded-lg px-3 py-2 focus:ring-2 focus:ring-primary focus:border-transparent\"\n        >\n          <option value=\"UTC\">UTC</option>\n          <option value=\"America/New_York\">Eastern Time</option>\n          <option value=\"America/Los_Angeles\">Pacific Time</option>\n          <option value=\"Europe/London\">London</option>\n          <option value=\"Europe/Paris\">Paris</option>\n          <option value=\"Asia/Tokyo\">Tokyo</option>\n          <option value=\"Asia/Shanghai\">Shanghai</option>\n          <option value=\"Asia/Seoul\">Seoul</option>\n        </select>\n      </div>\n    </div>\n  )\n}\n\n// Notification Settings Component\nfunction NotificationSettings({ \n  settings, \n  notifications,\n  onSave, \n  onMarkAllRead,\n  saving \n}: { \n  settings: UserSettings | null, \n  notifications: UserNotification[],\n  onSave: (settings: Partial<UserSettings>) => void,\n  onMarkAllRead: () => void,\n  saving: boolean \n}) {\n  if (!settings) return <div>Loading...</div>\n\n  const notificationTypes = [\n    { key: 'email_notifications', label: 'Email Notifications', description: 'Receive notifications via email' },\n    { key: 'push_notifications', label: 'Push Notifications', description: 'Receive browser push notifications' },\n    { key: 'order_notifications', label: 'Order Notifications', description: 'Get notified about order updates' },\n    { key: 'marketing_notifications', label: 'Marketing Notifications', description: 'Receive promotional content' },\n    { key: 'security_notifications', label: 'Security Notifications', description: 'Important security alerts' }\n  ]\n\n  return (\n    <div className=\"space-y-6\">\n      <div>\n        <h2 className=\"text-2xl font-bold text-gray-800 mb-4\">Notification Preferences</h2>\n        <p className=\"text-gray-600\">Choose how you want to be notified</p>\n      </div>\n\n      {/* Notification Types */}\n      <div className=\"space-y-4\">\n        {notificationTypes.map(({ key, label, description }) => (\n          <div key={key} className=\"flex items-center justify-between p-4 border border-gray-200 rounded-lg\">\n            <div>\n              <h3 className=\"font-medium text-gray-800\">{label}</h3>\n              <p className=\"text-sm text-gray-600\">{description}</p>\n            </div>\n            <button\n              onClick={() => onSave({ [key]: !settings[key as keyof UserSettings] })}\n              disabled={saving}\n              className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors ${\n                settings[key as keyof UserSettings] ? 'bg-primary' : 'bg-gray-200'\n              }`}\n            >\n              <span\n                className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${\n                  settings[key as keyof UserSettings] ? 'translate-x-6' : 'translate-x-1'\n                }`}\n              />\n            </button>\n          </div>\n        ))}\n      </div>\n\n      {/* Recent Notifications */}\n      <div className=\"space-y-4\">\n        <div className=\"flex items-center justify-between\">\n          <h3 className=\"text-lg font-semibold text-gray-800\">Recent Notifications</h3>\n          {notifications.some(n => !n.is_read) && (\n            <button\n              onClick={onMarkAllRead}\n              className=\"text-sm text-primary hover:text-blue-600\"\n            >\n              Mark all as read\n            </button>\n          )}\n        </div>\n        \n        {notifications.length === 0 ? (\n          <p className=\"text-gray-500 text-center py-4\">No notifications yet</p>\n        ) : (\n          <div className=\"space-y-2\">\n            {notifications.map((notification) => (\n              <div\n                key={notification.id}\n                className={`p-3 rounded-lg border ${\n                  notification.is_read ? 'bg-gray-50 border-gray-200' : 'bg-blue-50 border-blue-200'\n                }`}\n              >\n                <div className=\"flex items-start justify-between\">\n                  <div>\n                    <h4 className=\"font-medium text-gray-800\">{notification.title}</h4>\n                    <p className=\"text-sm text-gray-600\">{notification.message}</p>\n                    <p className=\"text-xs text-gray-500 mt-1\">\n                      {new Date(notification.created_at).toLocaleString()}\n                    </p>\n                  </div>\n                  <span className={`px-2 py-1 text-xs rounded-full ${\n                    notification.type === 'success' ? 'bg-green-100 text-green-800' :\n                    notification.type === 'warning' ? 'bg-yellow-100 text-yellow-800' :\n                    notification.type === 'error' ? 'bg-red-100 text-red-800' :\n                    'bg-blue-100 text-blue-800'\n                  }`}>\n                    {notification.type}\n                  </span>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n\n// Privacy Settings Component\nfunction PrivacySettings({ \n  settings, \n  onSave, \n  saving \n}: { \n  settings: UserSettings | null, \n  onSave: (settings: Partial<UserSettings>) => void,\n  saving: boolean \n}) {\n  if (!settings) return <div>Loading...</div>\n\n  return (\n    <div className=\"space-y-6\">\n      <div>\n        <h2 className=\"text-2xl font-bold text-gray-800 mb-4\">Privacy Settings</h2>\n        <p className=\"text-gray-600\">Control your privacy and visibility settings</p>\n      </div>\n\n      {/* Profile Visibility */}\n      <div className=\"space-y-2\">\n        <label className=\"text-sm font-medium text-gray-700\">Profile Visibility</label>\n        <div className=\"space-y-2\">\n          {[\n            { value: 'public', label: 'Public', description: 'Anyone can view your profile' },\n            { value: 'private', label: 'Private', description: 'Only you can view your profile' },\n            { value: 'contacts_only', label: 'Contacts Only', description: 'Only your contacts can view your profile' }\n          ].map(({ value, label, description }) => (\n            <label key={value} className=\"flex items-center gap-3 p-3 border border-gray-200 rounded-lg cursor-pointer hover:bg-gray-50\">\n              <input\n                type=\"radio\"\n                name=\"profile_visibility\"\n                value={value}\n                checked={settings.profile_visibility === value}\n                onChange={(e) => onSave({ profile_visibility: e.target.value as UserSettings['profile_visibility'] })}\n                disabled={saving}\n                className=\"text-primary focus:ring-primary\"\n              />\n              <div>\n                <div className=\"font-medium text-gray-800\">{label}</div>\n                <div className=\"text-sm text-gray-600\">{description}</div>\n              </div>\n            </label>\n          ))}\n        </div>\n      </div>\n\n      {/* Privacy Toggles */}\n      <div className=\"space-y-4\">\n        {[\n          { key: 'show_online_status', label: 'Show Online Status', description: 'Let others see when you\\'re online' },\n          { key: 'allow_contact_from_strangers', label: 'Allow Contact from Strangers', description: 'Allow people to contact you directly' },\n          { key: 'show_purchase_history', label: 'Show Purchase History', description: 'Make your purchase history visible to others' }\n        ].map(({ key, label, description }) => (\n          <div key={key} className=\"flex items-center justify-between p-4 border border-gray-200 rounded-lg\">\n            <div>\n              <h3 className=\"font-medium text-gray-800\">{label}</h3>\n              <p className=\"text-sm text-gray-600\">{description}</p>\n            </div>\n            <button\n              onClick={() => onSave({ [key]: !settings[key as keyof UserSettings] })}\n              disabled={saving}\n              className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors ${\n                settings[key as keyof UserSettings] ? 'bg-primary' : 'bg-gray-200'\n              }`}\n            >\n              <span\n                className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${\n                  settings[key as keyof UserSettings] ? 'translate-x-6' : 'translate-x-1'\n                }`}\n              />\n            </button>\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n\n// Security Settings Component\nfunction SecuritySettings({ \n  settings, \n  onSave, \n  saving \n}: { \n  settings: UserSettings | null, \n  onSave: (settings: Partial<UserSettings>) => void,\n  saving: boolean \n}) {\n  if (!settings) return <div>Loading...</div>\n\n  return (\n    <div className=\"space-y-6\">\n      <div>\n        <h2 className=\"text-2xl font-bold text-gray-800 mb-4\">Security Settings</h2>\n        <p className=\"text-gray-600\">Manage your account security preferences</p>\n      </div>\n\n      {/* Two Factor Authentication */}\n      <div className=\"p-4 border border-gray-200 rounded-lg\">\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <h3 className=\"font-medium text-gray-800\">Two-Factor Authentication</h3>\n            <p className=\"text-sm text-gray-600\">Add an extra layer of security to your account</p>\n          </div>\n          <button\n            onClick={() => onSave({ two_factor_enabled: !settings.two_factor_enabled })}\n            disabled={saving}\n            className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors ${\n              settings.two_factor_enabled ? 'bg-primary' : 'bg-gray-200'\n            }`}\n          >\n            <span\n              className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${\n                settings.two_factor_enabled ? 'translate-x-6' : 'translate-x-1'\n              }`}\n            />\n          </button>\n        </div>\n      </div>\n\n      {/* Session Timeout */}\n      <div className=\"space-y-2\">\n        <label className=\"text-sm font-medium text-gray-700\">Session Timeout</label>\n        <select\n          value={settings.session_timeout}\n          onChange={(e) => onSave({ session_timeout: parseInt(e.target.value) })}\n          disabled={saving}\n          className=\"w-full border border-gray-300 rounded-lg px-3 py-2 focus:ring-2 focus:ring-primary focus:border-transparent\"\n        >\n          <option value={1800}>30 minutes</option>\n          <option value={3600}>1 hour</option>\n          <option value={7200}>2 hours</option>\n          <option value={14400}>4 hours</option>\n          <option value={28800}>8 hours</option>\n          <option value={86400}>24 hours</option>\n        </select>\n      </div>\n\n      {/* Force Password Change */}\n      <div className=\"p-4 border border-gray-200 rounded-lg\">\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <h3 className=\"font-medium text-gray-800\">Require Password Change</h3>\n            <p className=\"text-sm text-gray-600\">Force password change on next login</p>\n          </div>\n          <button\n            onClick={() => onSave({ require_password_change: !settings.require_password_change })}\n            disabled={saving}\n            className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors ${\n              settings.require_password_change ? 'bg-primary' : 'bg-gray-200'\n            }`}\n          >\n            <span\n              className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${\n                settings.require_password_change ? 'translate-x-6' : 'translate-x-1'\n              }`}\n            />\n          </button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\n// API Settings Component\nfunction ApiSettings({ \n  apiKeys,\n  showCreateForm,\n  newKeyName,\n  onToggleCreateForm,\n  onKeyNameChange,\n  onCreateKey,\n  onDeleteKey\n}: { \n  apiKeys: UserApiKey[],\n  showCreateForm: boolean,\n  newKeyName: string,\n  onToggleCreateForm: () => void,\n  onKeyNameChange: (name: string) => void,\n  onCreateKey: () => void,\n  onDeleteKey: (keyId: string) => void\n}) {\n  return (\n    <div className=\"space-y-6\">\n      <div>\n        <h2 className=\"text-2xl font-bold text-gray-800 mb-4\">API Access</h2>\n        <p className=\"text-gray-600\">Manage your API keys and access permissions</p>\n      </div>\n\n      {/* Create API Key */}\n      <div className=\"space-y-4\">\n        <div className=\"flex items-center justify-between\">\n          <h3 className=\"text-lg font-semibold text-gray-800\">API Keys</h3>\n          <button\n            onClick={onToggleCreateForm}\n            className=\"flex items-center gap-2 px-4 py-2 bg-primary text-white rounded-lg hover:bg-blue-600 transition-colors\"\n          >\n            <Plus className=\"w-4 h-4\" />\n            Create API Key\n          </button>\n        </div>\n\n        {showCreateForm && (\n          <div className=\"p-4 border border-gray-200 rounded-lg bg-gray-50\">\n            <div className=\"space-y-3\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Key Name\n                </label>\n                <input\n                  type=\"text\"\n                  value={newKeyName}\n                  onChange={(e) => onKeyNameChange(e.target.value)}\n                  placeholder=\"Enter a name for this API key\"\n                  className=\"w-full border border-gray-300 rounded-lg px-3 py-2 focus:ring-2 focus:ring-primary focus:border-transparent\"\n                />\n              </div>\n              <div className=\"flex gap-2\">\n                <button\n                  onClick={onCreateKey}\n                  disabled={!newKeyName.trim()}\n                  className=\"px-4 py-2 bg-primary text-white rounded-lg hover:bg-blue-600 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n                >\n                  Create Key\n                </button>\n                <button\n                  onClick={onToggleCreateForm}\n                  className=\"px-4 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors\"\n                >\n                  Cancel\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* API Keys List */}\n      <div className=\"space-y-3\">\n        {apiKeys.length === 0 ? (\n          <p className=\"text-gray-500 text-center py-8\">No API keys created yet</p>\n        ) : (\n          apiKeys.map((apiKey) => (\n            <div key={apiKey.id} className=\"p-4 border border-gray-200 rounded-lg\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex-1\">\n                  <h4 className=\"font-medium text-gray-800\">{apiKey.key_name}</h4>\n                  <p className=\"text-sm text-gray-600 font-mono\">\n                    {apiKey.api_key}\n                  </p>\n                  <div className=\"flex items-center gap-4 mt-2 text-xs text-gray-500\">\n                    <span>Created: {new Date(apiKey.created_at).toLocaleDateString()}</span>\n                    {apiKey.last_used_at && (\n                      <span>Last used: {new Date(apiKey.last_used_at).toLocaleDateString()}</span>\n                    )}\n                    {apiKey.expires_at && (\n                      <span>Expires: {new Date(apiKey.expires_at).toLocaleDateString()}</span>\n                    )}\n                  </div>\n                </div>\n                <button\n                  onClick={() => onDeleteKey(apiKey.id)}\n                  className=\"p-2 text-red-600 hover:bg-red-50 rounded-lg transition-colors\"\n                >\n                  <Trash2 className=\"w-4 h-4\" />\n                </button>\n              </div>\n            </div>\n          ))\n        )}\n      </div>\n    </div>\n  )\n}"],"names":[],"mappings":"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","debugId":null}}]
}