{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/liyao/Code/workwork/frontend/Growth_OS/src/lib/supabase.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js'\n\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL || 'https://placeholder.supabase.co'\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY || 'placeholder-key'\n\n// Only create client if both values are properly configured\nexport const supabase = (supabaseUrl !== 'https://placeholder.supabase.co' && supabaseAnonKey !== 'placeholder-key') \n  ? createClient(supabaseUrl, supabaseAnonKey)\n  : null\n\n// Database types\nexport interface UserProfile {\n  id: string\n  email: string\n  username: string\n  bio?: string\n  avatar?: string\n  wallet_address?: string\n  social_wechat?: string\n  social_alipay?: string\n  social_linkedin?: string\n  social_website?: string\n  email_verified?: boolean\n  is_active?: boolean\n  created_at?: string\n  updated_at?: string\n}"],"names":[],"mappings":";;;AAEoB;AAFpB;;AAEA,MAAM,cAAc,gFAAwC;AAC5D,MAAM,kBAAkB,wPAA6C;AAG9D,MAAM,WAAW,uCACpB,CAAA,GAAA,0LAAA,CAAA,eAAY,AAAD,EAAE,aAAa,mBAC1B","debugId":null}},
    {"offset": {"line": 25, "column": 0}, "map": {"version":3,"sources":["file:///Users/liyao/Code/workwork/frontend/Growth_OS/src/hooks/useAuth.ts"],"sourcesContent":["'use client'\n\nimport { useState, useEffect } from 'react'\nimport { supabase } from '@/lib/supabase'\nimport { UserProfile } from '@/types/web3'\nimport { User } from '@supabase/supabase-js'\n\nexport interface AuthContextType {\n  user: User | null\n  profile: UserProfile | null\n  loading: boolean\n  signUp: (email: string, password: string, username: string) => Promise<void>\n  signIn: (email: string, password: string) => Promise<void>\n  signOut: () => Promise<void>\n  connectWallet: (walletAddress: string) => Promise<void>\n  updateProfile: (updates: Partial<UserProfile>) => Promise<void>\n}\n\n// Auth hook implementation\nexport function useAuthProvider() {\n  const [user, setUser] = useState<User | null>(null)\n  const [profile, setProfile] = useState<UserProfile | null>(null)\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    console.log('AuthProvider useEffect - initializing...')\n    // Get initial session\n    if (supabase) {\n      console.log('Supabase available, getting session...')\n      supabase.auth.getSession().then(({ data: { session } }) => {\n        console.log('Initial session:', session)\n        setUser(session?.user ?? null)\n        if (session?.user) {\n          console.log('User found, loading profile for:', session.user.id)\n          loadUserProfile(session.user.id)\n        } else {\n          console.log('No user session found')\n          setLoading(false)\n        }\n      })\n\n      // Listen for auth changes\n      const {\n        data: { subscription },\n      } = supabase.auth.onAuthStateChange((event, session) => {\n        console.log('Auth state changed:', event, session)\n        setUser(session?.user ?? null)\n        if (session?.user) {\n          console.log('User authenticated, loading profile for:', session.user.id)\n          loadUserProfile(session.user.id)\n        } else {\n          console.log('User signed out, clearing profile')\n          setProfile(null)\n          setLoading(false)\n        }\n      })\n\n      return () => subscription.unsubscribe()\n    } else {\n      console.log('Supabase not available')\n      // Fallback for no Supabase config\n      setLoading(false)\n    }\n  }, [])\n\n  const loadUserProfile = async (userId: string) => {\n    if (!supabase) {\n      console.log('No supabase client available for loading profile')\n      return\n    }\n    \n    console.log('Loading user profile for ID:', userId)\n    \n    try {\n      const { data, error } = await supabase\n        .from('users')\n        .select('*')\n        .eq('id', userId)\n        .single()\n\n      console.log('Profile query result:', { data, error })\n\n      if (error) {\n        console.error('Profile loading error details:', {\n          code: error.code,\n          message: error.message,\n          details: error.details,\n          hint: error.hint\n        })\n        \n        if (error.code !== 'PGRST116') {\n          throw error\n        }\n      }\n\n      if (data) {\n        console.log('Profile loaded successfully:', data)\n        setProfile(convertToUserProfile(data))\n      } else {\n        console.log('No profile data found')\n        setProfile(null)\n      }\n    } catch (error) {\n      console.error('Error loading user profile:', error)\n    } finally {\n      console.log('Profile loading completed')\n      setLoading(false)\n    }\n  }\n\n  const signUp = async (email: string, password: string, username: string) => {\n    if (!supabase) throw new Error('Supabase configuration missing. Please check your environment variables.')\n    \n    console.log('Attempting to sign up user:', email)\n    \n    const { data, error } = await supabase.auth.signUp({\n      email,\n      password,\n      options: {\n        data: {\n          username: username,\n          bio: 'Hello! I\\'m new to WorkWork.',\n          avatar: 'https://avatars.githubusercontent.com/u/190834534?s=200&v=4'\n        }\n      }\n    })\n\n    if (error) {\n      console.error('Supabase auth error:', error)\n      \n      // 处理特定错误类型\n      if (error.message.includes('User already registered')) {\n        throw new Error('This email is already registered. Please try signing in instead.')\n      } else if (error.message.includes('Invalid email')) {\n        throw new Error('Please enter a valid email address.')\n      } else if (error.message.includes('Password')) {\n        throw new Error('Password must be at least 6 characters long.')\n      } else {\n        throw new Error(`Registration failed: ${error.message}`)\n      }\n    }\n\n    if (data.user) {\n      console.log('User created successfully. Profile will be auto-created by database trigger:', data.user.id)\n      // Profile is now automatically created by database trigger\n      // No need to wait in development mode\n    }\n  }\n\n  const signIn = async (email: string, password: string) => {\n    if (!supabase) throw new Error('Supabase not configured')\n    \n    const { error } = await supabase.auth.signInWithPassword({\n      email,\n      password,\n    })\n\n    if (error) {\n      console.error('Supabase signin error:', error)\n      \n      // 处理特定错误类型\n      if (error.message.includes('Invalid login credentials')) {\n        throw new Error('Invalid email or password. Please check your credentials and try again.')\n      } else if (error.message.includes('Email not confirmed')) {\n        throw new Error('Please confirm your email address before signing in.')\n      } else if (error.message.includes('Too many requests')) {\n        throw new Error('Too many login attempts. Please try again later.')\n      } else {\n        throw new Error(`Sign in failed: ${error.message}`)\n      }\n    }\n  }\n\n  const signOut = async () => {\n    if (!supabase) return\n    \n    const { error } = await supabase.auth.signOut()\n    if (error) throw error\n  }\n\n  const connectWallet = async (walletAddress: string) => {\n    if (!supabase || !user) return\n    \n    const { error } = await supabase\n      .from('users')\n      .update({ wallet_address: walletAddress })\n      .eq('id', user.id)\n\n    if (error) throw error\n\n    // Reload profile\n    await loadUserProfile(user.id)\n  }\n\n  const updateProfile = async (updates: Partial<UserProfile>) => {\n    if (!supabase || !user) return\n    \n    const { error } = await supabase\n      .from('users')\n      .update({\n        username: updates.username,\n        bio: updates.bio,\n        avatar: updates.avatar,\n        social_wechat: updates.social?.wechat,\n        social_alipay: updates.social?.alipay,\n        social_linkedin: updates.social?.linkedin,\n        social_website: updates.social?.website,\n      })\n      .eq('id', user.id)\n\n    if (error) throw error\n\n    // Reload profile\n    await loadUserProfile(user.id)\n  }\n\n  return {\n    user,\n    profile,\n    loading,\n    signUp,\n    signIn,\n    signOut,\n    connectWallet,\n    updateProfile,\n  }\n}\n\n// Helper function to convert Supabase data to UserProfile\nfunction convertToUserProfile(data: Record<string, unknown>): UserProfile {\n  return {\n    id: data.id as string,\n    email: data.email as string,\n    walletAddress: data.wallet_address as string | undefined,\n    username: data.username as string,\n    bio: (data.bio as string) || '',\n    avatar: (data.avatar as string) || 'https://avatars.githubusercontent.com/u/190834534?s=200&v=4',\n    social: {\n      wechat: data.social_wechat as string | undefined,\n      alipay: data.social_alipay as string | undefined,\n      linkedin: data.social_linkedin as string | undefined,\n      website: data.social_website as string | undefined,\n      twitter: '',\n      github: '',\n    },\n    stats: {\n      totalSales: 0,\n      totalProducts: 0,\n      rating: 0,\n      joinedAt: (data.created_at as string)?.split('T')[0] || new Date().toISOString().split('T')[0]\n    },\n    verification: {\n      isVerified: false,\n      kycCompleted: false,\n      badgeLevel: 'bronze',\n      emailVerified: (data.email_verified as boolean) || false\n    }\n  }\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 259, "column": 0}, "map": {"version":3,"sources":["file:///Users/liyao/Code/workwork/frontend/Growth_OS/src/providers/AuthProvider.tsx"],"sourcesContent":["'use client'\n\nimport { createContext, useContext } from 'react'\nimport { useAuthProvider, type AuthContextType } from '@/hooks/useAuth'\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined)\n\nexport function useAuth() {\n  const context = useContext(AuthContext)\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider')\n  }\n  return context\n}\n\nexport function AuthProvider({ children }: { children: React.ReactNode }) {\n  const auth = useAuthProvider()\n\n  return (\n    <AuthContext.Provider value={auth}>\n      {children}\n    </AuthContext.Provider>\n  )\n}"],"names":[],"mappings":";;;;;AAEA;AACA;;;AAHA;;;AAKA,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAA+B;AAExD,SAAS;;IACd,MAAM,UAAU,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT;GANgB;AAQT,SAAS,aAAa,KAA2C;QAA3C,EAAE,QAAQ,EAAiC,GAA3C;;IAC3B,MAAM,OAAO,CAAA,GAAA,0HAAA,CAAA,kBAAe,AAAD;IAE3B,qBACE,6LAAC,YAAY,QAAQ;QAAC,OAAO;kBAC1B;;;;;;AAGP;IARgB;;QACD,0HAAA,CAAA,kBAAe;;;KADd","debugId":null}}]
}